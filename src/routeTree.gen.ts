/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SolutionImport } from './routes/solution'
import { Route as ProductImport } from './routes/product'
import { Route as LoginImport } from './routes/login'
import { Route as DetailsImport } from './routes/details'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedAuthenticatedImport } from './routes/_authenticated/_authenticated'
import { Route as AuthenticatedAuthInvoicesImport } from './routes/_authenticated/_auth.invoices'
import { Route as AuthenticatedAuthFleetImport } from './routes/_authenticated/_auth.fleet'
import { Route as AuthenticatedAuthDashboardImport } from './routes/_authenticated/_auth.dashboard'
import { Route as AuthenticatedAuthInvoicesIndexImport } from './routes/_authenticated/_auth.invoices.index'
import { Route as AuthenticatedAuthInvoicesInvoicesIDImport } from './routes/_authenticated/_auth.invoices.$invoicesId'

// Create/Update Routes

const SolutionRoute = SolutionImport.update({
  id: '/solution',
  path: '/solution',
  getParentRoute: () => rootRoute,
} as any)

const ProductRoute = ProductImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DetailsRoute = DetailsImport.update({
  id: '/details',
  path: '/details',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAuthenticatedRoute = AuthenticatedAuthenticatedImport.update(
  {
    id: '/_authenticated/_authenticated',
    getParentRoute: () => rootRoute,
  } as any,
)

const AuthenticatedAuthInvoicesRoute = AuthenticatedAuthInvoicesImport.update({
  id: '/_authenticated/_auth/invoices',
  path: '/invoices',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAuthFleetRoute = AuthenticatedAuthFleetImport.update({
  id: '/_authenticated/_auth/fleet',
  path: '/fleet',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedAuthDashboardRoute = AuthenticatedAuthDashboardImport.update(
  {
    id: '/_authenticated/_auth/dashboard',
    path: '/dashboard',
    getParentRoute: () => rootRoute,
  } as any,
)

const AuthenticatedAuthInvoicesIndexRoute =
  AuthenticatedAuthInvoicesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAuthInvoicesRoute,
  } as any)

const AuthenticatedAuthInvoicesInvoicesIDRoute =
  AuthenticatedAuthInvoicesInvoicesIDImport.update({
    id: '/$invoicesID',
    path: '/$invoicesID',
    getParentRoute: () => AuthenticatedAuthInvoicesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/details': {
      id: '/details'
      path: '/details'
      fullPath: '/details'
      preLoaderRoute: typeof DetailsImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/product': {
      id: '/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductImport
      parentRoute: typeof rootRoute
    }
    '/solution': {
      id: '/solution'
      path: '/solution'
      fullPath: '/solution'
      preLoaderRoute: typeof SolutionImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_authenticated': {
      id: '/_authenticated/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_auth/dashboard': {
      id: '/_authenticated/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedAuthDashboardImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_auth/fleet': {
      id: '/_authenticated/_auth/fleet'
      path: '/fleet'
      fullPath: '/fleet'
      preLoaderRoute: typeof AuthenticatedAuthFleetImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_auth/invoices': {
      id: '/_authenticated/_auth/invoices'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof AuthenticatedAuthInvoicesImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_auth/invoices/$invoicesID': {
      id: '/_authenticated/_auth/invoices/$invoicesID'
      path: '/$invoicesID'
      fullPath: '/invoices/$invoicesID'
      preLoaderRoute: typeof AuthenticatedAuthInvoicesInvoicesIDImport
      parentRoute: typeof AuthenticatedAuthInvoicesImport
    }
    '/_authenticated/_auth/invoices/': {
      id: '/_authenticated/_auth/invoices/'
      path: '/'
      fullPath: '/invoices/'
      preLoaderRoute: typeof AuthenticatedAuthInvoicesIndexImport
      parentRoute: typeof AuthenticatedAuthInvoicesImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAuthInvoicesRouteChildren {
  AuthenticatedAuthInvoicesInvoicesIDRoute: typeof AuthenticatedAuthInvoicesInvoicesIDRoute
  AuthenticatedAuthInvoicesIndexRoute: typeof AuthenticatedAuthInvoicesIndexRoute
}

const AuthenticatedAuthInvoicesRouteChildren: AuthenticatedAuthInvoicesRouteChildren =
  {
    AuthenticatedAuthInvoicesInvoicesIDRoute:
      AuthenticatedAuthInvoicesInvoicesIDRoute,
    AuthenticatedAuthInvoicesIndexRoute: AuthenticatedAuthInvoicesIndexRoute,
  }

const AuthenticatedAuthInvoicesRouteWithChildren =
  AuthenticatedAuthInvoicesRoute._addFileChildren(
    AuthenticatedAuthInvoicesRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/details': typeof DetailsRoute
  '/login': typeof LoginRoute
  '/product': typeof ProductRoute
  '/solution': typeof SolutionRoute
  '': typeof AuthenticatedAuthenticatedRoute
  '/dashboard': typeof AuthenticatedAuthDashboardRoute
  '/fleet': typeof AuthenticatedAuthFleetRoute
  '/invoices': typeof AuthenticatedAuthInvoicesRouteWithChildren
  '/invoices/$invoicesID': typeof AuthenticatedAuthInvoicesInvoicesIDRoute
  '/invoices/': typeof AuthenticatedAuthInvoicesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/details': typeof DetailsRoute
  '/login': typeof LoginRoute
  '/product': typeof ProductRoute
  '/solution': typeof SolutionRoute
  '': typeof AuthenticatedAuthenticatedRoute
  '/dashboard': typeof AuthenticatedAuthDashboardRoute
  '/fleet': typeof AuthenticatedAuthFleetRoute
  '/invoices/$invoicesID': typeof AuthenticatedAuthInvoicesInvoicesIDRoute
  '/invoices': typeof AuthenticatedAuthInvoicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/details': typeof DetailsRoute
  '/login': typeof LoginRoute
  '/product': typeof ProductRoute
  '/solution': typeof SolutionRoute
  '/_authenticated/_authenticated': typeof AuthenticatedAuthenticatedRoute
  '/_authenticated/_auth/dashboard': typeof AuthenticatedAuthDashboardRoute
  '/_authenticated/_auth/fleet': typeof AuthenticatedAuthFleetRoute
  '/_authenticated/_auth/invoices': typeof AuthenticatedAuthInvoicesRouteWithChildren
  '/_authenticated/_auth/invoices/$invoicesID': typeof AuthenticatedAuthInvoicesInvoicesIDRoute
  '/_authenticated/_auth/invoices/': typeof AuthenticatedAuthInvoicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/details'
    | '/login'
    | '/product'
    | '/solution'
    | ''
    | '/dashboard'
    | '/fleet'
    | '/invoices'
    | '/invoices/$invoicesID'
    | '/invoices/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/details'
    | '/login'
    | '/product'
    | '/solution'
    | ''
    | '/dashboard'
    | '/fleet'
    | '/invoices/$invoicesID'
    | '/invoices'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/details'
    | '/login'
    | '/product'
    | '/solution'
    | '/_authenticated/_authenticated'
    | '/_authenticated/_auth/dashboard'
    | '/_authenticated/_auth/fleet'
    | '/_authenticated/_auth/invoices'
    | '/_authenticated/_auth/invoices/$invoicesID'
    | '/_authenticated/_auth/invoices/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DetailsRoute: typeof DetailsRoute
  LoginRoute: typeof LoginRoute
  ProductRoute: typeof ProductRoute
  SolutionRoute: typeof SolutionRoute
  AuthenticatedAuthenticatedRoute: typeof AuthenticatedAuthenticatedRoute
  AuthenticatedAuthDashboardRoute: typeof AuthenticatedAuthDashboardRoute
  AuthenticatedAuthFleetRoute: typeof AuthenticatedAuthFleetRoute
  AuthenticatedAuthInvoicesRoute: typeof AuthenticatedAuthInvoicesRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DetailsRoute: DetailsRoute,
  LoginRoute: LoginRoute,
  ProductRoute: ProductRoute,
  SolutionRoute: SolutionRoute,
  AuthenticatedAuthenticatedRoute: AuthenticatedAuthenticatedRoute,
  AuthenticatedAuthDashboardRoute: AuthenticatedAuthDashboardRoute,
  AuthenticatedAuthFleetRoute: AuthenticatedAuthFleetRoute,
  AuthenticatedAuthInvoicesRoute: AuthenticatedAuthInvoicesRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/details",
        "/login",
        "/product",
        "/solution",
        "/_authenticated/_authenticated",
        "/_authenticated/_auth/dashboard",
        "/_authenticated/_auth/fleet",
        "/_authenticated/_auth/invoices"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/details": {
      "filePath": "details.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/product": {
      "filePath": "product.tsx"
    },
    "/solution": {
      "filePath": "solution.tsx"
    },
    "/_authenticated/_authenticated": {
      "filePath": "_authenticated/_authenticated.tsx"
    },
    "/_authenticated/_auth/dashboard": {
      "filePath": "_authenticated/_auth.dashboard.tsx"
    },
    "/_authenticated/_auth/fleet": {
      "filePath": "_authenticated/_auth.fleet.tsx"
    },
    "/_authenticated/_auth/invoices": {
      "filePath": "_authenticated/_auth.invoices.tsx",
      "children": [
        "/_authenticated/_auth/invoices/$invoicesID",
        "/_authenticated/_auth/invoices/"
      ]
    },
    "/_authenticated/_auth/invoices/$invoicesID": {
      "filePath": "_authenticated/_auth.invoices.$invoicesID.tsx",
      "parent": "/_authenticated/_auth/invoices"
    },
    "/_authenticated/_auth/invoices/": {
      "filePath": "_authenticated/_auth.invoices.index.tsx",
      "parent": "/_authenticated/_auth/invoices"
    }
  }
}
ROUTE_MANIFEST_END */
